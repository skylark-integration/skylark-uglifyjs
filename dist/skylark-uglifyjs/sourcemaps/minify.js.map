{"version":3,"sources":["minify.js"],"names":["define","m_utils","m_ast","m_parse","m_output","m_compress","m_sourcemap","m_propmangle","defaults","HOP","AST_Toplevel","AST_Node","parse","OutputStream","Compressor","SourceMap","mangle_properties","reserve_quoted_keys","to_ascii","to_base64","parse_source_map","content","JSON","ex","Error","set_shorthand","name","options","keys","forEach","key","init_cache","cache","props","Dictionary","fromObject","to_json","toObject","Buffer","atob","btoa","alloc","b64","toString","str","from","minify","files","annotations","undefined","compress","enclose","expression","ie","ie8","keep_fargs","keep_fnames","mangle","module","nameCache","output","rename","sourceMap","timings","toplevel","v8","validate","warnings","webkit","wrap","enable_validation","quoted_props","start","Date","now","vars","eval","properties","reserved","keep_quoted","Array","isArray","filename","includeSources","names","root","url","log_function","warning","push","inlined_content","source_map_content","orig","Object","create","comments","end","comments_after","i","length","comment","type","match","exec","value","warn","wrap_expression","action","option","print_to_string","slice","file","replace","validate_ast","figure_out_scope","expand_names","scope","compute_char_frequency","mangle_names","unwrap_expression","result","ast","code","source_map","setSourceContent","stream","print","get","map","total","disable_validation"],"mappings":"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","file":"../minify.js","sourcesContent":["define([\n    \"./utils\",\n    \"./ast\",\n    \"./parse\",\n    \"./output\",\n    \"./compress\",\n    \"./sourcemap\",\n    \"./propmangle\"\n],function(m_utils, m_ast,m_parse,m_output,m_compress,m_sourcemap,m_propmangle){\n    \"use strict\";\n\n    const {\n        defaults,\n        HOP\n    } = m_utils;\n    const  { AST_Toplevel, AST_Node, walk, AST_Scope } = m_ast;\n    const { parse } = m_parse;\n    const { OutputStream } = m_output; \n    const { Compressor } = m_compress;\n\n    const { SourceMap } = m_sourcemap;\n\n    const {\n        mangle_properties,\n        reserve_quoted_keys,\n    } = m_propmangle;\n\n    var to_ascii, to_base64;\n    if (typeof Buffer == \"undefined\") {\n        to_ascii = atob;\n        to_base64 = btoa;\n    } else if (typeof Buffer.alloc == \"undefined\") {\n        to_ascii = function(b64) {\n            return new Buffer(b64, \"base64\").toString();\n        };\n        to_base64 = function(str) {\n            return new Buffer(str).toString(\"base64\");\n        };\n    } else {\n        to_ascii = function(b64) {\n            return Buffer.from(b64, \"base64\").toString();\n        };\n        to_base64 = function(str) {\n            return Buffer.from(str).toString(\"base64\");\n        };\n    }\n\n    function read_source_map(name, toplevel) {\n        var comments = toplevel.end.comments_after;\n        for (var i = comments.length; --i >= 0;) {\n            var comment = comments[i];\n            if (comment.type != \"comment1\") break;\n            var match = /^# ([^\\s=]+)=(\\S+)\\s*$/.exec(comment.value);\n            if (!match) break;\n            if (match[1] == \"sourceMappingURL\") {\n                match = /^data:application\\/json(;.*?)?;base64,([^,]+)$/.exec(match[2]);\n                if (!match) break;\n                return to_ascii(match[2]);\n            }\n        }\n        AST_Node.warn(\"inline source map not found: {name}\", {\n            name: name,\n        });\n    }\n\n    function parse_source_map(content) {\n        try {\n            return JSON.parse(content);\n        } catch (ex) {\n            throw new Error(\"invalid input source map: \" + content);\n        }\n    }\n\n    function set_shorthand(name, options, keys) {\n        keys.forEach(function(key) {\n            if (options[key]) {\n                if (typeof options[key] != \"object\") options[key] = {};\n                if (!(name in options[key])) options[key][name] = options[name];\n            }\n        });\n    }\n\n    function init_cache(cache) {\n        if (!cache) return;\n        if (!(\"props\" in cache)) {\n            cache.props = new Dictionary();\n        } else if (!(cache.props instanceof Dictionary)) {\n            cache.props = Dictionary.fromObject(cache.props);\n        }\n    }\n\n    function to_json(cache) {\n        return {\n            props: cache.props.toObject()\n        };\n    }\n\n    function minify(files, options) {\n        try {\n            options = defaults(options, {\n                annotations: undefined,\n                compress: {},\n                enclose: false,\n                expression: false,\n                ie: false,\n                ie8: false,\n                keep_fargs: false,\n                keep_fnames: false,\n                mangle: {},\n                module: false,\n                nameCache: null,\n                output: {},\n                parse: {},\n                rename: undefined,\n                sourceMap: false,\n                timings: false,\n                toplevel: !!(options && options[\"module\"]),\n                v8: false,\n                validate: false,\n                warnings: false,\n                webkit: false,\n                wrap: false,\n            }, true);\n            if (options.validate) AST_Node.enable_validation();\n            var timings = options.timings && { start: Date.now() };\n            if (options.annotations !== undefined) set_shorthand(\"annotations\", options, [ \"compress\", \"output\" ]);\n            if (options.expression) set_shorthand(\"expression\", options, [ \"compress\", \"parse\" ]);\n            if (options.ie8) options.ie = options.ie || options.ie8;\n            if (options.ie) set_shorthand(\"ie\", options, [ \"compress\", \"mangle\", \"output\", \"rename\" ]);\n            if (options.keep_fargs) set_shorthand(\"keep_fargs\", options, [ \"compress\", \"mangle\", \"rename\" ]);\n            if (options.keep_fnames) set_shorthand(\"keep_fnames\", options, [ \"compress\", \"mangle\", \"rename\" ]);\n            if (options.module) set_shorthand(\"module\", options, [ \"compress\", \"parse\" ]);\n            if (options.toplevel) set_shorthand(\"toplevel\", options, [ \"compress\", \"mangle\", \"rename\" ]);\n            if (options.v8) set_shorthand(\"v8\", options, [ \"mangle\", \"output\", \"rename\" ]);\n            if (options.webkit) set_shorthand(\"webkit\", options, [ \"compress\", \"mangle\", \"output\", \"rename\" ]);\n            var quoted_props;\n            if (options.mangle) {\n                options.mangle = defaults(options.mangle, {\n                    cache: options.nameCache && (options.nameCache.vars || {}),\n                    eval: false,\n                    ie: false,\n                    keep_fargs: false,\n                    keep_fnames: false,\n                    properties: false,\n                    reserved: [],\n                    toplevel: false,\n                    v8: false,\n                    webkit: false,\n                }, true);\n                if (options.mangle.properties) {\n                    if (typeof options.mangle.properties != \"object\") {\n                        options.mangle.properties = {};\n                    }\n                    if (options.mangle.properties.keep_quoted) {\n                        quoted_props = options.mangle.properties.reserved;\n                        if (!Array.isArray(quoted_props)) quoted_props = [];\n                        options.mangle.properties.reserved = quoted_props;\n                    }\n                    if (options.nameCache && !(\"cache\" in options.mangle.properties)) {\n                        options.mangle.properties.cache = options.nameCache.props || {};\n                    }\n                }\n                init_cache(options.mangle.cache);\n                init_cache(options.mangle.properties.cache);\n            }\n            if (options.rename === undefined) options.rename = options.compress && options.mangle;\n            if (options.sourceMap) {\n                options.sourceMap = defaults(options.sourceMap, {\n                    content: null,\n                    filename: null,\n                    includeSources: false,\n                    names: true,\n                    root: null,\n                    url: null,\n                }, true);\n            }\n            var warnings = [];\n            if (options.warnings) AST_Node.log_function(function(warning) {\n                warnings.push(warning);\n            }, options.warnings == \"verbose\");\n            if (timings) timings.parse = Date.now();\n            var toplevel;\n            options.parse = options.parse || {};\n            if (files instanceof AST_Node) {\n                toplevel = files;\n            } else {\n                if (typeof files == \"string\") files = [ files ];\n                options.parse.toplevel = null;\n                var source_map_content = options.sourceMap && options.sourceMap.content;\n                if (typeof source_map_content == \"string\" && source_map_content != \"inline\") {\n                    source_map_content = parse_source_map(source_map_content);\n                }\n                if (source_map_content) options.sourceMap.orig = Object.create(null);\n                for (var name in files) if (HOP(files, name)) {\n                    options.parse.filename = name;\n                    options.parse.toplevel = toplevel = parse(files[name], options.parse);\n                    if (source_map_content == \"inline\") {\n                        var inlined_content = read_source_map(name, toplevel);\n                        if (inlined_content) options.sourceMap.orig[name] = parse_source_map(inlined_content);\n                    } else if (source_map_content) {\n                        options.sourceMap.orig[name] = source_map_content;\n                    }\n                }\n            }\n            if (options.parse.expression) toplevel = toplevel.wrap_expression();\n            if (quoted_props) reserve_quoted_keys(toplevel, quoted_props);\n            [ \"enclose\", \"wrap\" ].forEach(function(action) {\n                var option = options[action];\n                if (!option) return;\n                var orig = toplevel.print_to_string().slice(0, -1);\n                toplevel = toplevel[action](option);\n                files[toplevel.start.file] = toplevel.print_to_string().replace(orig, \"\");\n            });\n            if (options.validate) toplevel.validate_ast();\n            if (timings) timings.rename = Date.now();\n            if (options.rename) {\n                toplevel.figure_out_scope(options.rename);\n                toplevel.expand_names(options.rename);\n            }\n            if (timings) timings.compress = Date.now();\n            if (options.compress) {\n                toplevel = new Compressor(options.compress).compress(toplevel);\n                if (options.validate) toplevel.validate_ast();\n            }\n            if (timings) timings.scope = Date.now();\n            if (options.mangle) toplevel.figure_out_scope(options.mangle);\n            if (timings) timings.mangle = Date.now();\n            if (options.mangle) {\n                toplevel.compute_char_frequency(options.mangle);\n                toplevel.mangle_names(options.mangle);\n            }\n            if (timings) timings.properties = Date.now();\n            if (quoted_props) reserve_quoted_keys(toplevel, quoted_props);\n            if (options.mangle && options.mangle.properties) mangle_properties(toplevel, options.mangle.properties);\n            if (options.parse.expression) toplevel = toplevel.unwrap_expression();\n            if (timings) timings.output = Date.now();\n            var result = {};\n            var output = defaults(options.output, {\n                ast: false,\n                code: true,\n            });\n            if (output.ast) result.ast = toplevel;\n            if (output.code) {\n                if (options.sourceMap) {\n                    output.source_map = SourceMap(options.sourceMap);\n                    if (options.sourceMap.includeSources) {\n                        if (files instanceof AST_Toplevel) {\n                            throw new Error(\"original source content unavailable\");\n                        } else for (var name in files) if (HOP(files, name)) {\n                            output.source_map.setSourceContent(name, files[name]);\n                        }\n                    }\n                }\n                delete output.ast;\n                delete output.code;\n                var stream = OutputStream(output);\n                toplevel.print(stream);\n                result.code = stream.get();\n                if (options.sourceMap) {\n                    result.map = output.source_map.toString();\n                    var url = options.sourceMap.url;\n                    if (url) {\n                        result.code = result.code.replace(/\\n\\/\\/# sourceMappingURL=\\S+\\s*$/, \"\");\n                        if (url == \"inline\") {\n                            result.code += \"\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\" + to_base64(result.map);\n                        } else {\n                            result.code += \"\\n//# sourceMappingURL=\" + url;\n                        }\n                    }\n                }\n            }\n            if (options.nameCache && options.mangle) {\n                if (options.mangle.cache) options.nameCache.vars = to_json(options.mangle.cache);\n                if (options.mangle.properties && options.mangle.properties.cache) {\n                    options.nameCache.props = to_json(options.mangle.properties.cache);\n                }\n            }\n            if (timings) {\n                timings.end = Date.now();\n                result.timings = {\n                    parse: 1e-3 * (timings.rename - timings.parse),\n                    rename: 1e-3 * (timings.compress - timings.rename),\n                    compress: 1e-3 * (timings.scope - timings.compress),\n                    scope: 1e-3 * (timings.mangle - timings.scope),\n                    mangle: 1e-3 * (timings.properties - timings.mangle),\n                    properties: 1e-3 * (timings.output - timings.properties),\n                    output: 1e-3 * (timings.end - timings.output),\n                    total: 1e-3 * (timings.end - timings.start)\n                };\n            }\n            if (warnings.length) {\n                result.warnings = warnings;\n            }\n            return result;\n        ///} catch (ex) {\n        ///    return { error: ex };\n        } finally {\n            AST_Node.log_function();\n            AST_Node.disable_validation();\n        }\n    }\n\n    return {\n        minify\n    };\n});"]}